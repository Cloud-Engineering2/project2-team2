name: CI Test for AWS EKS
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'manifest/**' # 특정 디렉토리 무시
  pull_request:
    branches:
      - main
    types:
      - closed  # PR이 병합될 때 실행

jobs:
  ci:
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    environment: aws-eks-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: add application.properties
        run: |
          echo "${{ secrets.PROPERTIES }}" >> src/main/resources/application.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Naming jar file
        run: mv ./build/libs/project2-team2-0.0.1-SNAPSHOT.jar ./build/libs/app.jar
        # @TODO regex

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR private
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      - name: Build, tag, and push docker image to Amazon ECR private
        env:
          REGISTRY_URI: ${{ secrets.REGISTRY_URI }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $REGISTRY_URI
            docker build -t $REGISTRY_URI:$IMAGE_TAG .
            docker push $REGISTRY_URI:$IMAGE_TAG

  argocd:
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    environment: aws-eks-test
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: cd-manifest
          token: ${{ secrets.T2_YEERYONG_GITHUB_TOKEN }}

      - name: Update Image with New SHA
        run: |
          sed -i "s%image: ${{ secrets.REGISTRY_URI }}:[a-zA-Z0-9._-]*%image: ${{ secrets.REGISTRY_URI }}:${{ github.sha }}%" ./manifest/eks-app.yaml

      - name: Commit and push changes
        run: |
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git add .
          git commit -m "[CI/CD Automated] Update spring boot image to latest"
          git push
